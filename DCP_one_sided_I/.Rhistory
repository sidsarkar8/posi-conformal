geom_line(data = get_bds_fin , aes(x = Empirical.CDF.values , y = upper.centred, colour = Method)) +
ylab("centred") +
theme(legend.position="bottom")+
# ggtitle(expression( paste("Comparison of methods with ", delta," = 0.1, n = ",1000, sep = "")))+
# theme(text = element_text(size = 15))+
theme(text = element_text(size = 15))
p2 = ggplot(data = get_bds_fin %>% filter(Empirical.CDF.values < 0.15), aes(x = Empirical.CDF.values, y = lower.centred, colour = Method)) +
geom_line() +
theme_bw() +
geom_line(data = get_bds_fin %>% filter(Empirical.CDF.values < 0.15), aes(x = Empirical.CDF.values , y = upper.centred, colour = Method)) +
ylab("centred") +
theme(legend.position="bottom")+
# ggtitle(expression( paste("Comparison of methods with ", delta," = 0.1, n = ",1000, sep = "")),
#         subtitle = "Zoomed in on values < 0.2")+
theme(text = element_text(size = 15))
p21 = ggarrange(p1,
p2,
ncol=2, nrow=1, common.legend = TRUE, legend="bottom")
p21 = annotate_figure(p21, top = text_grob(paste("Comparison of confidence bands (centred) for n = ", n),size = 17))
p21
ggplot(data = get_bds_fin, aes(x = Empirical.CDF.values, y = lower.bound, colour = Method)) +
geom_line() +theme_bw() +
geom_line(data = get_bds_fin, aes(x = Empirical.CDF.values , y = upper.bound, colour = Method)) +
geom_point(aes(y =Empirical.CDF.values, x =Empirical.CDF.values), col = "black") +
ylab("") +
theme(legend.position="bottom")+
ggtitle(expression( paste("Comparison of methods with ", delta," = 0.1, n = ",100, sep = "")))+
theme(text = element_text(size = 15))
get_bds_fin = get_bds_fin %>% filter(Method!= "Simes")
p1 = ggplot(data = get_bds_fin , aes(x = Empirical.CDF.values, y = lower.centred, colour = Method)) +
geom_line() +
theme_bw() +
geom_line(data = get_bds_fin , aes(x = Empirical.CDF.values , y = upper.centred, colour = Method)) +
ylab("centred") +
theme(legend.position="bottom")+
# ggtitle(expression( paste("Comparison of methods with ", delta," = 0.1, n = ",1000, sep = "")))+
# theme(text = element_text(size = 15))+
theme(text = element_text(size = 15))
p2 = ggplot(data = get_bds_fin %>% filter(Empirical.CDF.values < 0.15), aes(x = Empirical.CDF.values, y = lower.centred, colour = Method)) +
geom_line() +
theme_bw() +
geom_line(data = get_bds_fin %>% filter(Empirical.CDF.values < 0.15), aes(x = Empirical.CDF.values , y = upper.centred, colour = Method)) +
ylab("centred") +
theme(legend.position="bottom")+
# ggtitle(expression( paste("Comparison of methods with ", delta," = 0.1, n = ",1000, sep = "")),
#         subtitle = "Zoomed in on values < 0.2")+
theme(text = element_text(size = 15))
p21 = ggarrange(p1,
p2,
ncol=2, nrow=1, common.legend = TRUE, legend="bottom")
p21 = annotate_figure(p21, top = text_grob(paste("Comparison of confidence bands (centred) for n = ", n),size = 17))
p21
##################################
n = 500
get_bds_dw_n = get_bds_dw(n = n, alpha = 0.1) %>% mutate("Empirical.CDF.values" = 1:n/n) %>% mutate(Method = "DW")
get_bds_dw_n = get_bds_dw_n  %>% rename("lower.bound" = "low",
"upper.bound" = "up")
get_bds_dkw_n = get_bds_dkw_simp(n = n, alpha = 0.1) %>% mutate("Empirical.CDF.values" = 1:n/n) %>% mutate(Method = "DKW")
get_bds_dkw_n = get_bds_dkw_n  %>% rename("lower.bound" = "low",
"upper.bound" = "up")
get_bds_eic_n = get_bds_eic1(n = n, alpha = 0.1) %>% mutate("Empirical.CDF.values" = 1:n/n) %>% mutate(Method = "Eicker (Asymp)")
get_bds_eic_n = get_bds_eic_n  %>% rename("lower.bound" = "low",
"upper.bound" = "up")
get_bds_ad_n = get_bds_ad(n = n, alpha = 0.1) %>% mutate("Empirical.CDF.values" = 1:n/n) %>% mutate(Method = "AD (Asymp)")
get_bds_ad_n = get_bds_ad_n  %>% rename("lower.bound" = "low",
"upper.bound" = "up")
get_bds_simes_n = get_bds_simes(n = n, alpha = 0.1, k = n/2) %>% mutate("Empirical.CDF.values" = 1:n/n) %>% mutate(Method = "Simes")
get_bds_simes_n = get_bds_simes_n  %>% rename("lower.bound" = "low",
"upper.bound" = "up")
get_bds_bates_n = get_bds_bates(n = n, alpha = 0.1) %>% mutate("Empirical.CDF.values" = 1:n/n) %>% mutate(Method = "Bates")
get_bds_bates_n = get_bds_bates_n  %>% rename("lower.bound" = "low",
"upper.bound" = "up")
get_bds_fin = rbind(get_bds_dw_n, get_bds_dkw_n, get_bds_eic_n, get_bds_ad_n, get_bds_simes_n, get_bds_bates_n) %>% as.data.frame()
get_bds_fin = get_bds_fin %>% mutate(lower.centred = lower.bound -  Empirical.CDF.values)
get_bds_fin = get_bds_fin %>% mutate(upper.centred = upper.bound -  Empirical.CDF.values)
ggplot(data = get_bds_fin, aes(x = Empirical.CDF.values, y = lower.bound, colour = Method)) +
geom_line() +theme_bw() +
geom_line(data = get_bds_fin, aes(x = Empirical.CDF.values , y = upper.bound, colour = Method)) +
geom_point(aes(y =Empirical.CDF.values, x =Empirical.CDF.values), col = "black") +
ylab("") +
theme(legend.position="bottom")+
ggtitle(expression( paste("Comparison of methods with ", delta," = 0.1, n = ",100, sep = "")))+
theme(text = element_text(size = 15))
get_bds_fin = get_bds_fin %>% filter(Method!= "Simes")
p1 = ggplot(data = get_bds_fin , aes(x = Empirical.CDF.values, y = lower.centred, colour = Method)) +
geom_line() +
theme_bw() +
geom_line(data = get_bds_fin , aes(x = Empirical.CDF.values , y = upper.centred, colour = Method)) +
ylab("centred") +
theme(legend.position="bottom")+
# ggtitle(expression( paste("Comparison of methods with ", delta," = 0.1, n = ",1000, sep = "")))+
# theme(text = element_text(size = 15))+
theme(text = element_text(size = 15))
p2 = ggplot(data = get_bds_fin %>% filter(Empirical.CDF.values < 0.15), aes(x = Empirical.CDF.values, y = lower.centred, colour = Method)) +
geom_line() +
theme_bw() +
geom_line(data = get_bds_fin %>% filter(Empirical.CDF.values < 0.15), aes(x = Empirical.CDF.values , y = upper.centred, colour = Method)) +
ylab("centred") +
theme(legend.position="bottom")+
# ggtitle(expression( paste("Comparison of methods with ", delta," = 0.1, n = ",1000, sep = "")),
#         subtitle = "Zoomed in on values < 0.2")+
theme(text = element_text(size = 15))
p21 = ggarrange(p1,
p2,
ncol=2, nrow=1, common.legend = TRUE, legend="bottom")
p21 = annotate_figure(p21, top = text_grob(paste("Comparison of confidence bands (centred) for n = ", n),size = 17))
p21
p21
p21
p21
ggsave(paste("/Users/sidsarkar/Documents/Projects/Conf_redone/DCP_fin/compareMethod_comb_",n,"_new.pdf",
sep= ""), width = 12, height = 6, dpi = 300, units = "in" )
gamma_grid = seq( from = alpha - 0.02, to = alpha + 0.02, by = 0.005)
n = 100
B1 = 1000
B2 = 1000
alpha = 0.1
gamma_grid = seq( from = alpha - 0.02, to = alpha + 0.02, by = 0.005)
length(gamma_grid)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(ggpubr)
#library(Rmpfr)
###################### DKW ######################
get_bds_dkw_simp = function(alpha = 0.05, n)
{
bds_dkw_simp = data.frame(low = rep(NA, n),
up = rep(NA, n))
bds_dkw_simp$low = (1:n)/n - sqrt(( log(2) - log(alpha))/(2*n))
bds_dkw_simp$up = (1:n)/n + sqrt(( log(2) - log(alpha))/(2*n))
bds_dkw_simp$low[ bds_dkw_simp$low < 0] = 0
bds_dkw_simp$up[ bds_dkw_simp$up > 1] = 1
return(bds_dkw_simp)
}
###################### DW ######################
source("/Users/sidsarkar/Documents/Projects/Conf_redone/dumbgun_wellner_new/dw_quantile_gen1.R")
source("/Users/sidsarkar/Documents/Projects/Conf_redone/dumbgun_wellner_new/get_bds_dw1.R")
###################### Asymptotic Eicker ######################
log2 = function(x)
{return(log(log(x)))}
log3 = function(x)
{return(log(log(log(x))))}
get_bds_eic = function(alpha = 0.05, n)
{
bds_eic = data.frame(low = rep(NA, n),
up = rep(NA, n))
t_eic = log( -2/(sqrt(pi)*log(1-alpha)) )
t_eic_n = (2*log2(n))^(1/2)*( 1 + ((log3(n) + 2*t_eic)/(4*log2(n))) )
bds_eic$low = (1:n)/n -  t_eic_n*sqrt((1:n)*(n - (1:n)))/n^(1.5)
bds_eic$up = (1:n)/n + t_eic_n*sqrt((1:n)*(n - (1:n)))/n^(1.5)
bds_eic$low[1] = 0
bds_eic$low[n] = bds_eic$low[n-1]
bds_eic$up[1] = bds_eic$up[2]
bds_eic$up[n] = 1
bds_eic$low[ bds_eic$low < 0] = 0
bds_eic$up[ bds_eic$up > 1] = 1
return(bds_eic)
}
###################### EIC with all indices ######################
get_bds_eic1 = function(alpha = 0.05, n)
{
bds_eic = data.frame(low = rep(NA, n),
up = rep(NA, n))
t_eic = log( -2/(sqrt(pi)*log(1-alpha)) )
t_eic_n = (2*log2(n))^(1/2)*( 1 + ((log3(n) + 2*t_eic)/(4*log2(n))) )
bds_eic$low = (1:n)/(n+1) -  t_eic_n*sqrt( (1:n)*(n + 1 - (1:n)))*(n+1)^(-1)*(n+2)^(-0.5)
bds_eic$up = (1:n)/(n+1) + t_eic_n*sqrt( (1:n)*(n + 1 - (1:n)))*(n+1)^(-1)*(n+2)^(-0.5)
bds_eic$low[ bds_eic$low < 0] = 0
bds_eic$up[ bds_eic$up > 1] = 1
return(bds_eic)
}
###################### Asymptotic AD ######################
fin_func_ad = function(p,q,quant,n)
{
if(p==q){
temp = -quant
}else{
temp = abs( sqrt(n)*(p-q)/(sqrt(q)*sqrt(1-q))) - quant
}
return(temp)
}
get_bds_ad = function(alpha = 0.05, n)
{
bds_ad = data.frame(low = rep(NA, n),
up = rep(NA, n))
t_ad = log( -2/(sqrt(pi)*log(1-alpha)) )
t_ad_n = (2*log2(n))^(1/2)*( 1 + ((log3(n) + 2*t_ad)/(4*log2(n))) )
t_n = (1:n)/(n)
for( i in 2:(n-1))
{
### lower bound
if( fin_func_ad(p = t_n[i], q = 10^(-10), quant = t_ad_n, n = n) < 0 ){
bds_ad$low[i] = 0
}else{
bds_ad$low[i] = uniroot( fin_func_ad, lower = 10^(-10) , upper = t_n[i],
p = t_n[i], quant = t_ad_n, n = n, tol = 10^-10  )$root
}
### upper bound
if( fin_func_ad(p = t_n[i], q = 1-10^(-10), quant = t_ad_n, n = n) < 0 ){
bds_ad$up[i] = 1
}else{
bds_ad$up[i] = uniroot( fin_func_ad, lower = t_n[i] , upper = 1-10^(-10),
p = t_n[i], quant = t_ad_n, n = n, tol = 10^-10 )$root
}
}
bds_ad$low[1] = 0
bds_ad$low[n] = bds_ad$low[n-1]
bds_ad$up[1] = bds_ad$up[2]
bds_ad$up[n] = 1
bds_ad$low[ bds_ad$low < 0] = 0
bds_ad$up[ bds_ad$up > 1] = 1
return(bds_ad)
}
###################### Simes ######################
get_bds_simes = function(alpha = 0.05, n , k = NA)
{
if(is.na(k)){k = n/2}
#if(is.na(k_up)){k_up = n/2}
bds_simes = data.frame(low = rep(NA, n),
up = rep(NA, n))
for (i in 1:n)
{
#print(i)
if(i < k){
bds_simes$up[n - i + 1] = 1
bds_simes$low[i] = 0
}else{
simes_seq = (i:(i - k + 1)) / (n:(n - k + 1))
temp_log_simes = ( sum(log(simes_seq))/k + log(alpha/2)/k )
#bds_simes$low[i] = (alpha/2)^(1/k)*(prod(simes_seq))^(1/k)
bds_simes$low[i] = as.double(exp(temp_log_simes))
#bds_simes$up[n - i + 1] = 1 - (alpha / 2) ^ (1 / k) * (prod(simes_seq))^(1/k)
bds_simes$up[n - i + 1] = 1 - as.double( exp(temp_log_simes))
}
}
bds_simes$low[bds_simes$low<0] = 0
bds_simes$up[bds_simes$up>1] = 1
return(bds_simes)
}
################################## bates
source("/Users/sidsarkar/Documents/Projects/Conf_redone/dumbgun_wellner_new/get_bds_bates.R")
##################################
n = 500
get_bds_dw_n = get_bds_dw(n = n, alpha = 0.1) %>% mutate("Empirical.CDF.values" = 1:n/n) %>% mutate(Method = "DW")
get_bds_dw_n = get_bds_dw_n  %>% rename("lower.bound" = "low",
"upper.bound" = "up")
get_bds_dkw_n = get_bds_dkw_simp(n = n, alpha = 0.1) %>% mutate("Empirical.CDF.values" = 1:n/n) %>% mutate(Method = "DKW")
get_bds_dkw_n = get_bds_dkw_n  %>% rename("lower.bound" = "low",
"upper.bound" = "up")
get_bds_eic_n = get_bds_eic1(n = n, alpha = 0.1) %>% mutate("Empirical.CDF.values" = 1:n/n) %>% mutate(Method = "Eicker (Asymp)")
get_bds_eic_n = get_bds_eic_n  %>% rename("lower.bound" = "low",
"upper.bound" = "up")
get_bds_ad_n = get_bds_ad(n = n, alpha = 0.1) %>% mutate("Empirical.CDF.values" = 1:n/n) %>% mutate(Method = "AD (Asymp)")
get_bds_ad_n = get_bds_ad_n  %>% rename("lower.bound" = "low",
"upper.bound" = "up")
get_bds_simes_n = get_bds_simes(n = n, alpha = 0.1, k = n/2) %>% mutate("Empirical.CDF.values" = 1:n/n) %>% mutate(Method = "Simes")
get_bds_simes_n = get_bds_simes_n  %>% rename("lower.bound" = "low",
"upper.bound" = "up")
get_bds_bates_n = get_bds_bates(n = n, alpha = 0.1) %>% mutate("Empirical.CDF.values" = 1:n/n) %>% mutate(Method = "Bates")
get_bds_bates_n = get_bds_bates_n  %>% rename("lower.bound" = "low",
"upper.bound" = "up")
get_bds_fin = rbind(get_bds_dw_n, get_bds_dkw_n, get_bds_eic_n, get_bds_ad_n, get_bds_simes_n, get_bds_bates_n) %>% as.data.frame()
#get_bds_fin = rbind(get_bds_dw_n, get_bds_dkw_n, get_bds_eic_n,get_bds_ad_n) %>% as.data.frame()
get_bds_fin = get_bds_fin %>% mutate(lower.centred = lower.bound -  Empirical.CDF.values)
get_bds_fin = get_bds_fin %>% mutate(upper.centred = upper.bound -  Empirical.CDF.values)
ggplot(data = get_bds_fin, aes(x = Empirical.CDF.values, y = lower.bound, colour = Method)) +
geom_line() +theme_bw() +
geom_line(data = get_bds_fin, aes(x = Empirical.CDF.values , y = upper.bound, colour = Method)) +
geom_point(aes(y =Empirical.CDF.values, x =Empirical.CDF.values), col = "black") +
ylab("") +
theme(legend.position="bottom")+
ggtitle(expression( paste("Comparison of methods with ", delta," = 0.1, n = ",100, sep = "")))+
theme(text = element_text(size = 15))
#ggsave("/Users/sidsarkar/Desktop/Conf/DCP_fin/compareMethod.pdf")
get_bds_fin = get_bds_fin %>% filter(Method!= "Simes")
p1 = ggplot(data = get_bds_fin , aes(x = Empirical.CDF.values, y = lower.centred, colour = Method)) +
geom_line() +
theme_bw() +
geom_line(data = get_bds_fin , aes(x = Empirical.CDF.values , y = upper.centred, colour = Method)) +
ylab("centred") +
theme(legend.position="bottom")+
# ggtitle(expression( paste("Comparison of methods with ", delta," = 0.1, n = ",1000, sep = "")))+
# theme(text = element_text(size = 15))+
theme(text = element_text(size = 15))
#ggsave("/Users/sidsarkar/Desktop/Conf/DCP_fin/compareMethod_1000.pdf", width = 8, height = 6, dpi = 300, units = "in" )
p2 = ggplot(data = get_bds_fin %>% filter(Empirical.CDF.values < 0.15), aes(x = Empirical.CDF.values, y = lower.centred, colour = Method)) +
geom_line() +
theme_bw() +
geom_line(data = get_bds_fin %>% filter(Empirical.CDF.values < 0.15), aes(x = Empirical.CDF.values , y = upper.centred, colour = Method)) +
ylab("centred") +
theme(legend.position="bottom")+
# ggtitle(expression( paste("Comparison of methods with ", delta," = 0.1, n = ",1000, sep = "")),
#         subtitle = "Zoomed in on values < 0.2")+
theme(text = element_text(size = 15))
#ggsave("/Users/sidsarkar/Desktop/Conf/DCP_fin/compareMethod_zoom_1000.pdf", width = 8, height = 6, dpi = 300, units = "in" )
p21 = ggarrange(p1,
p2,
ncol=2, nrow=1, common.legend = TRUE, legend="bottom")
p21 = annotate_figure(p21, top = text_grob(paste("Comparison of confidence bands (centred) for m = ", n),size = 17))
p21
p21
ggsave(paste("/Users/sidsarkar/Documents/Projects/Conf_redone/DCP_fin/compareMethod_comb_",n,"_new.pdf",
sep= ""), width = 12, height = 6, dpi = 300, units = "in" )
p1 = ggplot(data = get_bds_fin , aes(x = Empirical.CDF.values, y = lower.centred, colour = Method)) +
geom_line() +
theme_bw() +
geom_line(data = get_bds_fin , aes(x = Empirical.CDF.values , y = upper.centred, colour = Method)) +
ylab("centred") +
theme(legend.position="bottom", legend.text = element_text(size=14))
get_bds_fin = get_bds_fin %>% filter(Method!= "Simes")
p1 = ggplot(data = get_bds_fin , aes(x = Empirical.CDF.values, y = lower.centred, colour = Method)) +
geom_line() +
theme_bw() +
geom_line(data = get_bds_fin , aes(x = Empirical.CDF.values , y = upper.centred, colour = Method)) +
ylab("centred") +
theme(legend.position="bottom", legend.text = element_text(size=14)) +
# ggtitle(expression( paste("Comparison of methods with ", delta," = 0.1, n = ",1000, sep = "")))+
# theme(text = element_text(size = 15))+
theme(text = element_text(size = 15))
p2 = ggplot(data = get_bds_fin %>% filter(Empirical.CDF.values < 0.15), aes(x = Empirical.CDF.values, y = lower.centred, colour = Method)) +
geom_line() +
theme_bw() +
geom_line(data = get_bds_fin %>% filter(Empirical.CDF.values < 0.15), aes(x = Empirical.CDF.values , y = upper.centred, colour = Method)) +
ylab("centred") +
theme(legend.position="bottom", legend.text = element_text(size=14)) +
# ggtitle(expression( paste("Comparison of methods with ", delta," = 0.1, n = ",1000, sep = "")),
#         subtitle = "Zoomed in on values < 0.2")+
theme(text = element_text(size = 15))
p21 = ggarrange(p1,
p2,
ncol=2, nrow=1, common.legend = TRUE, legend="bottom")
p21 = annotate_figure(p21, top = text_grob(paste("Comparison of confidence bands (centred) for m = ", n),size = 17))
p21
ggsave(paste("/Users/sidsarkar/Documents/Projects/Conf_redone/DCP_fin/compareMethod_comb_",n,"_new.pdf",
sep= ""), width = 12, height = 6, dpi = 300, units = "in" )
p1 = ggplot(data = get_bds_fin , aes(x = Empirical.CDF.values, y = lower.centred, colour = Method)) +
geom_line() +
theme_bw() +
geom_line(data = get_bds_fin , aes(x = Empirical.CDF.values , y = upper.centred, colour = Method)) +
ylab("centred") +
theme(legend.position="bottom", legend.text = element_text(size=14)) +
# ggtitle(expression( paste("Comparison of methods with ", delta," = 0.1, n = ",1000, sep = "")))+
# theme(text = element_text(size = 15))+
theme(text = element_text(size = 15))
p2 = ggplot(data = get_bds_fin %>% filter(Empirical.CDF.values < 0.15), aes(x = Empirical.CDF.values, y = lower.centred, colour = Method)) +
geom_line(linewidth = 1) +
theme_bw() +
geom_line(data = get_bds_fin %>% filter(Empirical.CDF.values < 0.15), aes(x = Empirical.CDF.values , y = upper.centred, colour = Method)) +
ylab("centred") +
theme(legend.position="bottom", legend.text = element_text(size=14)) +
# ggtitle(expression( paste("Comparison of methods with ", delta," = 0.1, n = ",1000, sep = "")),
#         subtitle = "Zoomed in on values < 0.2")+
theme(text = element_text(size = 15))
p21 = ggarrange(p1,
p2,
ncol=2, nrow=1, common.legend = TRUE, legend="bottom")
p21 = annotate_figure(p21, top = text_grob(paste("Comparison of confidence bands (centred) for m = ", n),size = 17))
p21
p2 = ggplot(data = get_bds_fin %>% filter(Empirical.CDF.values < 0.15), aes(x = Empirical.CDF.values, y = lower.centred, colour = Method)) +
geom_line(linewidth = 1) +
theme_bw() +
geom_line(data = get_bds_fin %>% filter(Empirical.CDF.values < 0.15), aes(x = Empirical.CDF.values , y = upper.centred, colour = Method),
linewidth = 1) +
ylab("centred") +
theme(legend.position="bottom", legend.text = element_text(size=14)) +
# ggtitle(expression( paste("Comparison of methods with ", delta," = 0.1, n = ",1000, sep = "")),
#         subtitle = "Zoomed in on values < 0.2")+
theme(text = element_text(size = 15))
p21 = ggarrange(p1,
p2,
ncol=2, nrow=1, common.legend = TRUE, legend="bottom")
p21 = annotate_figure(p21, top = text_grob(paste("Comparison of confidence bands (centred) for m = ", n),size = 17))
p21
p1 = ggplot(data = get_bds_fin , aes(x = Empirical.CDF.values, y = lower.centred, colour = Method)) +
geom_line(linewidth = 1) +
theme_bw() +
geom_line(data = get_bds_fin , aes(x = Empirical.CDF.values , y = upper.centred, colour = Method),
linewidth = 1) +
ylab("centred") +
theme(legend.position="bottom", legend.text = element_text(size=14)) +
# ggtitle(expression( paste("Comparison of methods with ", delta," = 0.1, n = ",1000, sep = "")))+
# theme(text = element_text(size = 15))+
theme(text = element_text(size = 15))
p2 = ggplot(data = get_bds_fin %>% filter(Empirical.CDF.values < 0.15), aes(x = Empirical.CDF.values, y = lower.centred, colour = Method)) +
geom_line(linewidth = 1) +
theme_bw() +
geom_line(data = get_bds_fin %>% filter(Empirical.CDF.values < 0.15), aes(x = Empirical.CDF.values , y = upper.centred, colour = Method),
linewidth = 1) +
ylab("centred") +
theme(legend.position="bottom", legend.text = element_text(size=14)) +
# ggtitle(expression( paste("Comparison of methods with ", delta," = 0.1, n = ",1000, sep = "")),
#         subtitle = "Zoomed in on values < 0.2")+
theme(text = element_text(size = 15))
p21 = ggarrange(p1,
p2,
ncol=2, nrow=1, common.legend = TRUE, legend="bottom")
p21 = annotate_figure(p21, top = text_grob(paste("Comparison of confidence bands (centred) for m = ", n),size = 17))
p21
ggsave(paste("/Users/sidsarkar/Documents/Projects/Conf_redone/DCP_fin/compareMethod_comb_",n,"_new.pdf",
sep= ""), width = 12, height = 6, dpi = 300, units = "in" )
p21 = ggarrange(p1,
p2,
ncol=2, nrow=1, common.legend = TRUE, legend="bottom")
p21 = annotate_figure(p21, top = text_grob(paste("Comparison of confidence bands (centred) for m = ", n),size = 18))
p21
ggsave(paste("/Users/sidsarkar/Documents/Projects/Conf_redone/DCP_fin/compareMethod_comb_",n,"_new.pdf",
sep= ""), width = 12, height = 6, dpi = 300, units = "in" )
### for I,delta
library(ggplot2)
library(dplyr)
setwd("/Users/sidsarkar/Documents/Projects/Conf_redone/DCP_one_sided_I")
####################################################################
### small n
df_dcp_1 =
read.csv("/Users/sidsarkar/Documents/Projects/Conf_redone/DCP_one_sided_I/dcp_files/df_dcp_I_smalln_2024.csv")[,-1] %>% as.data.frame()
#####################################################################
alpha_seq = seq(from = 0.02, to = 0.5, length.out = 19)
M = 500
method_names = df_dcp_1$Method %>% unique()
df_prop_cross = data.frame(Method = rep(method_names, each = M),
simul_id = rep(1:M, 4))
df_prop_cross = cbind(df_prop_cross, matrix(nrow = 4*M, ncol = 19))
df_prop_cross_full =  data.frame(Method = rep(method_names, each = M),
simul_id = rep(1:M, 4),
flag_if_cross = rep(NA,4*M))
for( idx in 1:(4*M))
{
if(idx%%100 == 0){cat(' ',idx)}
temp_method_name = df_prop_cross$Method[idx]
temp_simul_id = df_prop_cross$simul_id[idx]
temp_df_diff_cov = df_dcp_1 %>% filter(Method == temp_method_name,
simul_id == temp_simul_id ) %>%
dplyr::select(diff_coverage)
df_prop_cross[idx,3:21] = as.numeric(temp_df_diff_cov >= 0)
df_prop_cross_full$flag_if_cross[idx] = prod(temp_df_diff_cov>=0)
}
df_prop_cross_full =  df_prop_cross_full %>% group_by(Method) %>%
summarise( prop_if_cross_full := 1- mean(flag_if_cross) )
####################################################
colnames(df_prop_cross)[3:21] = paste("flag_al",1:19, sep="")
df_prop_cross_al = df_prop_cross %>% group_by(Method) %>%
summarise( prop_if_cross1 := 1- mean(flag_al1) )
for(idx in 2:19)
{
temp_name = paste("prop_if_cross", idx, sep="")
temp_al = paste("flag_al", idx ,sep = "")
df_prop_cross_al = cbind(df_prop_cross_al,
df_prop_cross %>% group_by(Method) %>%
summarise( {{temp_name}} := 1- mean(.data[[temp_al]]) )%>% .[,-1])
}
df_prop_cross_full = df_prop_cross_full %>%
mutate(diff_coverage = -0.04, alpha = 0.25)
########################################################################
ann_text = paste(" Prop. of curves > 1-alpha :" ,
(1- df_prop_cross_full$prop_if_cross_full))
df_dcp_1$Method[df_dcp_1$Method == "DKW univ"] = "DKW simul"
df_dcp_1$Method[df_dcp_1$Method == "DW univ"] = "DW simul"
df_prop_cross_full$Method[df_prop_cross_full$Method == "DKW univ"] = "DKW simul"
df_prop_cross_full$Method[df_prop_cross_full$Method == "DW univ"] = "DW simul"
df_dcp_1 %>%
ggplot(mapping = aes(x = alpha, y = diff_coverage, color = Method)) +
geom_line(aes(group = simul_id),alpha = 0.3,
show.legend = FALSE) +
theme_bw() +
facet_grid(~ Method) +
ylim(-0.05,0.1) +
scale_x_continuous(breaks = seq(from = 0.02, to = 0.5, length.out = 6)) +
geom_hline(yintercept = 0,linetype = 2) +
ylab(expression(paste("Coverage - (1 -", alpha, ")", sep=""))) +
ggtitle(expression(paste("Coverage of methods with ",
delta," = 0.1" ,sep = "")),
subtitle = expression(paste("(difference with (1-",alpha,"))", sep = ""))) +
theme(text = element_text(size = 13)) +
geom_text(data = df_prop_cross_full, label =  ann_text,
col = "black")
ggsave("./dcp_diff_coverage_multiple_one_sided_smalln.pdf", width = 12, height = 3.5,
dpi = 300, units = "in" )
####################################################################
#
# df_dcp_1 %>%
#   ggplot(mapping = aes(x = alpha, y = ratio_width, color = Method)) +
#   geom_line(aes(group = simul_id), alpha = 0.3,
#             show.legend = FALSE) +
#   facet_grid(~ Method) +
#   geom_hline(yintercept = 1,linetype = 2) +
#   scale_x_continuous(breaks = seq(from = 0.51, to = 0.9, length.out = 10)) +
#   ylab("Width / Width(true quantiles)") +
#   ggtitle(expression(paste("Width of prediction set across methods with ",
#                            delta," = 0.1", sep = "" )),
#           subtitle = "(ratio to true quantile widths)") +
#   theme(text = element_text(size = 13))
#
# ggsave("./dcp_diff_coverage_multiple_one_sided_smalln.pdf", width = 12, height = 3.5,
#        dpi = 300, units = "in" )
####################################################################
df_dcp_1 %>%
ggplot(mapping = aes(x = alpha, y = ratio_width, color = Method)) +
geom_line(aes(group = simul_id), alpha = 0.3,
show.legend = FALSE) +
theme_bw() +
facet_grid(~ Method) +
geom_hline(yintercept = 1,linetype = 2) +
scale_x_continuous(breaks = seq(from = 0.02, to = 0.5, length.out = 6)) +
ylab("Width / Width(true quantiles)") +
ggtitle(expression(paste("Width of prediction set across methods with ",
delta," = 0.1", sep = "" )),
subtitle = "(ratio to true quantile widths)") +
theme(text = element_text(size = 13))
ggsave("./dcp_ratio_width_multiple_one_sided_smalln.pdf", width = 12, height = 3.5,
dpi = 300, units = "in" )
####################################################################
